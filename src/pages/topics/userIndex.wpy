<template>
	<view class="page">
		<view class="page__bd">
			<topiclist :syncUrl.sync="requestUrl" :syncData.sync="requestData"></topiclist>
		</view>
	</view>
</template>
<script>
  /* eslint-disable */
  import wepy from 'wepy'
  import topicList from '@/components/topicList'

  export default class UserIndex extends wepy.page{
  	config = {
      navigationBarTitleText: 'Ta 发布的话题',
      enablePullDownRefresh: true
    }

    data = {
    	requestUrl: null,
    	requestData: {}
    }

    // 定义要使用的组件 topiclist,使用 topicList 组件
    components = {
    	topiclist: topicList
    }

    onLoad(options){
    	this.requestUrl = 'users/' + options.user_id + '/topics'
    	// 组件数据改变，也需要调用 this.$apply()
    	this.$apply()

    	/*
    	 * $invoke 是一个页面或组件对另一个组件中的方法的直接调用，
    	 * 通过传入组件路径找到相应的组件，然后再调用其方法
    	*/
    	// 调用组件 reload 方法
    	this.$invoke('topiclist','reload')
    }

    // 下拉刷新
    async onPullDownRefresh(){
    	// 调用组件 reload 方法
    	await this.$invoke('topiclist','reload')
    	wepy.stopPullDownRefresh()
    }

    // 上拉加载更多
    async onReachBottom (){
    	// 调用组件 loadMore 方法
    	this.$invoke('topiclist','loadMore')
    }

    // 页面重新打开的时候
    onShow(){
    	// 检测全局变量并刷新
    	// 通过 this.getCurrentPages().pop().route 获取当前页面的路由
    	// 如果当前页面需要刷新，则重新加载 topiclist。
    	this.$parent.checkRefreshPages(this.getCurrentPages().pop().route,()=>{
    		this.$invoke('topiclist','reload')
    	})
    }

  }
</script>